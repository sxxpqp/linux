kind: Deployment
apiVersion: apps/v1
metadata:
  name: tensorflowgpu-test-sf
  namespace: gitlab
  labels:
    app.kubernetes.io/instance: tensorflowgpu-ro-ym6i4h
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: tensorflowgpu-test-sf
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: tensorflowgpu-test-sf
    spec:
      volumes:
        - name: tf4
          nfs:
            server: 10.15.150.4
            path: /ksnfs07
      containers:
        - name: tensorflowgpu-rocm
          image: 'rocm/tensorflow:rocm4.1-tf2.4-dev'
          command:
            - /bin/sh
          args:
            - '-c'
            - while true; do echo hello; sleep 3600;done
          resources:
            limits:
              amd.com/gpu: '1'
          volumeMounts:
            - name: tf4
              mountPath: /tf/models
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

--- 
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: gitlab-postgresql
  namespace: gitlab
  labels:
    app: postgresql
    app.kubernetes.io/managed-by: Helm
    chart: postgresql-8.9.4
    heritage: Helm
    release: gitlab
  annotations:
    meta.helm.sh/release-name: gitlab
    meta.helm.sh/release-namespace: gitlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      release: gitlab
      role: master
  template:
    metadata:
      name: gitlab-postgresql
      creationTimestamp: null
      labels:
        app: postgresql
        chart: postgresql-8.9.4
        heritage: Helm
        release: gitlab
        role: master
      annotations:
        kubesphere.io/restartedAt: '2023-05-30T12:39:42.151Z'
        postgresql.gitlab/init-revision: '1'
    spec:
      volumes:
        - name: postgresql-password
          secret:
            secretName: gitlab-postgresql-password
            defaultMode: 420
        - name: custom-init-scripts
          configMap:
            name: gitlab-postgresql-init-db
            defaultMode: 420
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
      initContainers:
      # 初始化数据目录/bitnami/postgresql/data
        - name: busybox
          image:  busybox
          command: ["/bin/sh", "-c"]
          #修改目录权限bingnami/postgresql/data
          # args: ["chown -R 1001:1001 /bitnami/postgresql/data"]
          args: ["chmod -R 750  /bitnami/postgresql/data"]
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql          
      containers:
        - name: gitlab-postgresql
          image: 'docker.io/bitnami/postgresql:12.7.0'
          ports:
            - name: tcp-postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: POSTGRESQL_PORT_NUMBER
              value: '5432'
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_POSTGRES_PASSWORD_FILE
              value: /opt/bitnami/postgresql/secrets/postgresql-postgres-password
            - name: POSTGRES_USER
              value: gitlab
            - name: POSTGRES_PASSWORD_FILE
              value: /opt/bitnami/postgresql/secrets/postgresql-password
            - name: POSTGRES_DB
              value: gitlabhq_production
            - name: POSTGRESQL_ENABLE_LDAP
              value: 'no'
          resources:
            requests:
              cpu: 1250m
              memory: 1256Mi
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: postgresql-password
              mountPath: /opt/bitnami/postgresql/secrets/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-preinitdb.d/init_revision.sh
              subPath: init_revision.sh
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - >-
                  exec pg_isready -U "gitlab" -d "gitlabhq_production" -h
                  127.0.0.1 -p 5432
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - '-e'
                - >
                  exec pg_isready -U "gitlab" -d "gitlabhq_production" -h
                  127.0.0.1 -p 5432

                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f
                  /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
        - name: metrics
          image: 'docker.io/bitnami/postgres-exporter:0.8.0-debian-10-r99'
          ports:
            - name: http-metrics
              containerPort: 9187
              protocol: TCP
          env:
            - name: DATA_SOURCE_URI
              value: '127.0.0.1:5432/gitlabhq_production?sslmode=disable'
            - name: DATA_SOURCE_PASS_FILE
              value: /opt/bitnami/postgresql/secrets/postgresql-password
            - name: DATA_SOURCE_USER
              value: gitlab
          resources: {}
          volumeMounts:
            - name: postgresql-password
              mountPath: /opt/bitnami/postgresql/secrets/
          livenessProbe:
            httpGet:
              path: /
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        fsGroup: 1001
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: data
        creationTimestamp: null
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: gitlab-postgresql-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10

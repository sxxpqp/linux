---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: turingcloud-kafka
  labels:
    app: turingcloud-kafka
  annotations:
    kubesphere.io/creator: sxx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: turingcloud-kafka
  template:
    metadata:
      labels:
        app: turingcloud-kafka
      annotations:
        logging.kubesphere.io/logsidecar-config: '{}'
    spec:
      containers:
        - name: turingcloud-kafka
          image: 'docker.io/bitnami/kafka:3.4'
          ports:
            - name: tcp-9092
              containerPort: 9092
              protocol: TCP
          env:
            # - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              # value: 'turingcloud-zookeeper:2181'
             # KRaft settings
            - name: KAFKA_CFG_NODE_ID
              value: "0"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: controller,broker
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: 0@turingcloud-kafka:9093
            - name: KAFKA_CFG_LISTENERS
              value: 'PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://turingcloud-kafka:9092,EXTERNAL://10.10.100.226:9094'
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT    
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: turingcloud-kafka
        namespace: srs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  serviceName: turingcloud-kafka-dy1e
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
---
kind: Service
apiVersion: v1
metadata:
  name: turingcloud-kafka
  labels:
    app: turingcloud-kafka
  annotations:
    kubesphere.io/creator: sxx
    service.beta.kubernetes.io/qingcloud-load-balancer-eip-ids: ''
    service.beta.kubernetes.io/qingcloud-load-balancer-type: '0'
spec:
  ports:
    - name: tcp-9092
      protocol: TCP
      port: 9092
      targetPort: 9092
      nodePort: 31226
    - name: tcp-9093
      protocol: TCP
      port: 9093
      targetPort: 9093
      nodePort: 31970
    - name: tcp-9094
      protocol: TCP
      port: 9094
      targetPort: 9094
      nodePort: 31140
  selector:
    app: turingcloud-kafka
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack



